#	File : twt.conf

######################### TWT commands configuration ##################
# starts with a command name with parameters embedded inside

# The TWT setup command is used to start the TWT session.
twt_setup={
   Implicit=1                # When implicit TWT is used, STA calculates the Next TWT by adding a fixed value to the current TWT value
                             # 0: Explicit. (Not support yet) (10.47.3 Explicit TWT operation)
                             # 1: Implicit. (10.47.4 Implicit TWT operation)
   Announced=0               # If Announced TWT, STA will send a PS-Poll to signal its awake state to ex-AP before a frame
                             # that is not a Trigger frame is sent from the ex-AP to the STA.
                             # 0: Unannounced
                             # 1: Announced TWT
   TriggerEnabled=0          # Indicates that at least one trigger frame is transmitted in TWT SP.
                             # 0: Non-Trigger enabled
                             # 1: Trigger enabled TWT
   TWTInformationDisabled=0  # Indicates if TWT information frames are acceptable or not during the TWT session.
                             # 0: TWT information enabled
                             # 1: TWT information disabled
   NegotiationType=0         # Indicates if TWT session is Individual or Broadcast.
                             # 0: Individual TWT
                             # 1: Next Wake TBTT time
                             # 3: Broadcast TWT
   TWTWakeupDuration=64      # Indicates the `Nominal Minimum TWT Wake Duration` field in IEEE spec.
                             # The `Wake Duration Unit` field has been hardcode to 0, which means this field
                             # unit in (256 μs).
                             # Service Period >= Minimum TWT Wake Duration = TWTWakeupDuration * 256 μs
                             # Range: [0-max_of(UINT8)]
   FlowIdentifier=0          # Flow identifier. Any. It's decided by TWT responder(e.g. as STAUT, decieded by ex-AP).
                             # FID would be reported in cmd response according to ex-AP's TWT setup response.
                             # Range: [0-7]
   HardConstraint=1          # Identifies if firmware can internally change any of the TWT params in case AP sends
                             # TWT_REJECT to TWT Setup.
                             # 0: FW can tweak the TWT setup parameters if it is rejected by AP.
                             # 1: Firmware should not tweak any parameters.
   TWTExponent=10            # Indicates the `TWT Wake Interval Exponent` field in IEEE spec.
                             # Range: [0-63]
   TWTMantissa=512           # Indicates the `TWT Wake Interval Mantissa` field in IEEE spec.
                             # TWT interval = TWTExponent * (2^TWTMantissa) μs
                             # Range: [0-max_of(UINT16)]
   TWTRequestType=0          # 0: REQUEST_TWT
                             # 1: SUGGEST_TWT (Not support yet)
                             # Range: [0-7]
   BeaconMissThreshold=60    # (Required) TWT link lost timeout threshold. When TWT active, both link moniter and beacon miss stay awake mechanism
                             # would use this threshold to keep awake to track beacon. It won't report link lost until this threshold + 60 beacon interval timeout.
                             # Suggest this value longer than one TWT interval at least.
                             # Unit in seconds. Range [1-max_of(UINT16)]
}

# The TWT teardown command is used to terminate the TWT session.
twt_teardown={
    FlowIdentifier=0         # TWT Flow Identifier. Range: [0-7]. Must be same FID as the one got in TWT Setup.
    NegotiationType=0        # 0: Future Individual TWT SP start time
                             # 1: Next Wake TBTT time
    TearDownAllTWT=0         # 1: To teardown all TWT, 0 otherwise
}


# The TWT information command is used to suspend/resume the TWT session.
twt_information={
    FlowIdentifier=0         # TWT Flow Identifier. Range: [0-7]. Must be same FID as the one got in TWT Setup.
    SuspendDuration=3000     # TWT operation suspend duration in milli seconds.
                             # Range: [0-max_of(UINT32)]
                             # 0: Suspend forever, until next non-zero twt-information frame to resume;
                             # Else: Suspend agreement for specific duration in milli seconds, after than resume the session and enter SP immediately
}

# Get the current uAP BTWT config sets.
btwt_AP_config_get={
        ap_bcast_bet_sta_wait=0
        Ap_Bcast_Offset=0
        bcastTWTLI=0
        count=5               # 5 sets of BTWT configure.Range 2-5
}

# Set the current uAP BTWT config sets.
btwt_AP_config_set={
        ap_bcast_bet_sta_wait=0
        Ap_Bcast_Offset=0
        bcastTWTLI=0
        count=2              # 2 sets of BTWT configure.Range 2-5

        # Broadcast TWT sessions.
        # A valid BTWT config MUST contain BTWT-0 and BTWT-1 at least.
        # BTWT 0. Required, every BTWT joined STAs would auto join BTWT-0
        btwtId0=0
        Ap_Bcast_Mantissa0=112
        Ap_Bcast_Exponent0=10    # Range 10-26
        nominalwake0=128         # Nominal Wake To be given in integer between 64-255

        # BTWT 1. Required
        btwtId1=1
        Ap_Bcast_Mantissa1=32
        Ap_Bcast_Exponent1=10
        nominalwake1=64

        # BTWT 2
        btwtId2=2
        Ap_Bcast_Mantissa2=32
        Ap_Bcast_Exponent2=10
        nominalwake2=64

        # BTWT 3
        btwtId3=3
        Ap_Bcast_Mantissa3=32
        Ap_Bcast_Exponent3=10
        nominalwake3=64

        # BTWT 4
        btwtId4=4
        Ap_Bcast_Mantissa4=32
        Ap_Bcast_Exponent4=10
        nominalwake4=64
}
